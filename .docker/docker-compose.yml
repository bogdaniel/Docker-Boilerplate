version: '3.7'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  nginx:
    image: php-docker-tutorial/nginx
    environment:
      # Exposes the host BLACKFIRE_SERVER_ID and TOKEN environment variables.
      - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
      - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
      - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
      - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
      - BLACKFIRE_LOG_LEVEL=${BLACKFIRE_LOG_LEVEL}
      - BLACKFIRE_SOCKET=${BLACKFIRE_SOCKET}
      - BLACKFIRE_PORT=${BLACKFIRE_PORT}
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      backend:
        aliases:
          - ${APP_HOST}
  blackfire:
    env_file: .env
    restart: always
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    image: blackfire/blackfire
    environment:
      # Exposes the host BLACKFIRE_SERVER_ID and TOKEN environment variables.
      - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
      - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
      - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
      - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
      - BLACKFIRE_LOG_LEVEL=${BLACKFIRE_LOG_LEVEL}
      - BLACKFIRE_SOCKET=${BLACKFIRE_SOCKET}
      - BLACKFIRE_PORT=${BLACKFIRE_PORT}
    ports:
      - 8707:8707
    networks:
      - backend

  php-fpm:
    tty: true
    image: php-docker-tutorial/php-fpm
    environment:
      - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
      - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
      - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
      - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
      - BLACKFIRE_LOG_LEVEL=${BLACKFIRE_LOG_LEVEL}
      - BLACKFIRE_SOCKET=${BLACKFIRE_SOCKET}
      - BLACKFIRE_PORT=${BLACKFIRE_PORT}
    build:
      context: .
      dockerfile: ./php-fpm/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
        - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
        - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
        - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
        - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
        - BLACKFIRE_LOG_LEVEL=${BLACKFIRE_LOG_LEVEL}
        - BLACKFIRE_SOCKET=${BLACKFIRE_SOCKET}
        - BLACKFIRE_PORT=${BLACKFIRE_PORT}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    networks:
      - backend

  workspace:
    tty: true
    image: php-docker-tutorial/workspace
    environment:
      - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
      - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
      - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
      - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
      - BLACKFIRE_LOG_LEVEL=${BLACKFIRE_LOG_LEVEL}
      - BLACKFIRE_SOCKET=${BLACKFIRE_SOCKET}
      - BLACKFIRE_PORT=${BLACKFIRE_PORT}
    depends_on:
      - php-fpm
    build:
      context: .
      dockerfile: ./workspace/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "${WORKSPACE_HOST_SSH_PORT}:22"
    networks:
      - backend
  adminer:
    env_file: .env
    image: adminer
    restart: always
    depends_on:
      - php-fpm
      - workspace
    ports:
      - 1084:8080
    networks:
      - backend
  maildev:
    image: djfarrelly/maildev:latest
    env_file: .env
    depends_on:
      - php-fpm
      - workspace
    ports:
      - 1085:80
    networks:
      - backend
  mariadb:
    image: mariadb
    env_file: .env
    build:
      context: .
      dockerfile: ./mariadb/Dockerfile
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=fereastra
      - MYSQL_DATABASE=hyper-gallery
      - MYSQL_USER=bogdaniel
      - MYSQL_PASSWORD=fereastra
    networks:
      - backend
    ports:
      - 1083:3306